// Code generated by go-swagger; DO NOT EDIT.

package did

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewValidateDidParams creates a new ValidateDidParams object
// no default values defined in spec.
func NewValidateDidParams() ValidateDidParams {

	return ValidateDidParams{}
}

// ValidateDidParams contains all the bound params for the validate did operation
// typically these are obtained from a http.Request
//
// swagger:parameters validateDid
type ValidateDidParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*The did that needs be validated. Use JWT. Example: eyJhbGciOiJFUzI1NksiLCJ0eXAiOiJKV1QifQ.eyJzdWIiOiJkaWQ6ZXY6MnVpMVhQUmthOEV4d21GOG9KaFE2cVpicXMxWEdBUTJ5dUYiLCJpc3MiOiJmYWQ2Mjg0OGYxYTZjZGU0YzRkOTQ1M2RhZGVhNzE0Y2JkNTlmMTI4MjA4Nzg1M2RlOGIwYzYwNzJiZWMyN2U3YzZkOTExOWViMTY5YjQ0NDAzZTgzYjVlODdmOThjNzJiMDFjMmQ0NjQyMDA2YjE1NDZiMDA0MGFhNGUwNTU0ZiIsImlhdCI6MTU0OTMwNzMzMCwiZXhwIjoxNTQ5NDg3MzMwfQ.f2PJRQeb4BY-LiRZm_DnJw1aS2Anu5AAav6Wuq6ZbddgvMFg35tEbTm2vCVlRN-sjQ_Ffsce3ZfrBS2tqlSM9w
	  Required: true
	  In: path
	*/
	Did string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewValidateDidParams() beforehand.
func (o *ValidateDidParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rDid, rhkDid, _ := route.Params.GetOK("did")
	if err := o.bindDid(rDid, rhkDid, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindDid binds and validates parameter Did from path.
func (o *ValidateDidParams) bindDid(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.Did = raw

	return nil
}
